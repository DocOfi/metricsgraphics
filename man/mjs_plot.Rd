% Generated by roxygen2 (4.1.0.9000): do not edit by hand
% Please edit documentation in R/metricsgraphics.R
\name{mjs_plot}
\alias{mjs_plot}
\title{Create a new metricsgraphics.js  plot}
\usage{
mjs_plot(data, x, y, left = 80, right = 10, top = 40, bottom = 60,
  buffer = 8, width = NULL, height = NULL)
}
\arguments{
\item{data}{data frame}

\item{x}{bare name of column to use for x values}

\item{y}{bare name of column to use for y values}

\item{left}{the size of the left margin in pixels.}

\item{right}{the size of the right margin in pixels.}

\item{top}{the size of the top margin in pixels.}

\item{bottom}{the size of the bottom margin in pixels.}

\item{buffer}{the buffer size in pixels between the actual chart area and the margins.}

\item{width}{Width in pixels (optional, defaults to automatic sizing)}

\item{height}{Height in pixels (optional, defaults to automatic sizing)}
}
\description{
\code{mjs_plot()} initializes the metricsgraphics.js html widget
and takes a data frame & (bare) x & y column names as minimum input.
This must be piped to a "geom" (metricsgraphics.js only supports single
"geom" layers) and can also be piped to other \code{mjs_} functions that
manipulate aesthetics.
}
\details{
See \href{http://metricsgraphicsjs.org/}{MetricsGraphics.js} for more information.
}
\examples{
\dontrun{
data.frame(year=seq(1790, 1970, 10),
           uspop=as.numeric(uspop)) \%>\%
  mjs_plot(x=year, y=uspop) \%>\%
  mjs_line()
}
}

